<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kev Bar</title>
    <link>https://kev.bar/</link>
    <description>Recent content on Kev Bar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Jan 2023 22:36:04 -0600</lastBuildDate><atom:link href="https://kev.bar/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>Staggering IPv6 Numbers</title>
      <link>https://kev.bar/posts/networks/staggering-ipv6/</link>
      <pubDate>Wed, 04 Jan 2023 22:36:04 -0600</pubDate>
      
      <guid>https://kev.bar/posts/networks/staggering-ipv6/</guid>
      <description>At the moment, the IPv6 protocol is still seen as the eternal substitute for IPv4 to alleviate the problem of increasingly scarce Internet addresses. The true is that only a few people and companies are ready to support IPv6 despite being actively as Internet Standard since July 2017 (ignoring that it was developed in December 1998).
Yet one wonders how big the IPv6 address space is to guarantee that we won&amp;rsquo;t run out of IPs again in another 40 years.</description>
    </item>
    
    <item>
      <title>Free Cybersecurity Certification by ISC2</title>
      <link>https://kev.bar/posts/cybersecurity/free-cybersecurity-certification/</link>
      <pubDate>Thu, 29 Dec 2022 11:11:14 -0600</pubDate>
      
      <guid>https://kev.bar/posts/cybersecurity/free-cybersecurity-certification/</guid>
      <description>Who doesnt like free stuff? specially, when it can increase your chances of increasing your salary and improving your resume. If you see yourself in cybersecurity industry and have the passion and drive to enter a demanding and rewarding field, or even if you are getting started, please take advantage of this opportunity.
(ISC)2 is the world&amp;rsquo;s largest nonprofit association of certified cybersecurity professionals and has commited to offer FREE certification in Cybersecurity (CC).</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://kev.bar/posts/introduction/</link>
      <pubDate>Tue, 27 Dec 2022 08:06:25 -0600</pubDate>
      
      <guid>https://kev.bar/posts/introduction/</guid>
      <description>Greeting y&amp;rsquo;all!
Im Kevin and this is my personal webpage. I don&amp;rsquo;t need to introduce myself in this post since the homepage should have more than enough info about me. Here, I post about interesting stuff that I find in my daily journey, not only about tech but anything that draws my attention. Here you can find about:
Tech! Outdoors adventures Finance Machine Learning Cybersecurity Systems Admin DevOps Hacking Cryptocurrency Blockchain If there is something you want me to write about send me an email at hello at [this domain] (yes, this is need to prevent spam, I&amp;rsquo;ll see if it is effective).</description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <item>
      <title>Introduction</title>
      <link>https://kev.bar/notes/go/basic/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kev.bar/notes/go/basic/introduction/</guid>
      <description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618 </description>
    </item>
    
    <item>
      <title>Basic Types</title>
      <link>https://kev.bar/notes/go/basic/types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kev.bar/notes/go/basic/types/</guid>
      <description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description>
    </item>
    
    <item>
      <title>Flow Control</title>
      <link>https://kev.bar/notes/go/basic/flow-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kev.bar/notes/go/basic/flow-control/</guid>
      <description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description>
    </item>
    
    <item>
      <title>File Manipulation</title>
      <link>https://kev.bar/notes/go/advanced/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kev.bar/notes/go/advanced/files/</guid>
      <description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) </description>
    </item>
    
    <item>
      <title>Bash Variables</title>
      <link>https://kev.bar/notes/bash/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kev.bar/notes/bash/basic/</guid>
      <description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi </description>
    </item>
    
    
    
  </channel>
</rss>
